# 链接：https://ac.nowcoder.com/acm/problem/21544?&headNav=acm
# 来源：牛客网

# 题目描述
# 牛牛喜欢2的幂次，于是他在自己的书包里塞了很多写着2的幂次的卡片
# 可能多张卡片会写着同一个数字
# 牛牛喜欢那些能用一张或者多张卡片的和所表示的数字
# 比如书包里有四张卡片2,4,4,64
# 那么牛牛就会喜欢10,因为10=2+4+4
# 也喜欢0
# 但是不会喜欢12，因为12=4+4+2+2，可怜的牛牛只有一张2
# 现在牛牛想知道他一共会喜欢多少个数。
# 输入描述:

# 第一行输入一个整数n (1 ≤ n  ≤ 50)，表示卡片的数量
# 第二行输入n个数，表示每张卡片的数字
# 每个数字在[1, 2^50]之间

# 输出描述:

# 输出一个整数

# 示例1
# 输入
# 复制

# 2
# 1 2

# 输出
# 复制

# 4

# 示例2
# 输入
# 复制

# 4
# 1 1 1 1

# 输出
# 复制

# 5

# 示例3
# 输入
# 复制

# 7
# 1 2 2 2 4 4 16

# 输出
# 复制

# 32

# 示例4
# 输入
# 复制

# 5
# 1 32 1 16 32

# 输出
# 复制

# 18

# 备注:

# 子任务1：n <= 10
# 子任务2: n <= 20
# 子任务3: n <= 50


import sys 
from functools import *
from math import *


# sys.stdin = open("contests/input","r")
n = int(input())
arr = list(map(int,input().split()))
arr.sort()
arr.append(inf)
diff, cur, ans = 1, 0, 1
for a in arr:
    if a > cur+diff:
        ans *= (cur//diff+1)
        diff = cur = a 
    else:
        cur += a 
print(ans)




# 蛮不错的一题，很有意思

# 并不是独创的算法，说是解释了其他人的代码也不为过，虽然自己也想到了同样的解法
# 0x00 特殊构造

# 首先考虑一下20,21,22,23,…,2n20,21,22,23,…,2n，每种幂次的数各一个

# 显然可以获得0∼2n+1−10∼2n+1−1 共 2n+12n+1个数
# 0x01 直接加数的情况

# 考虑在上述数列中添加一些数，显然不管怎么添加幂次小于等于nn的数，其能获得的数仍然是从0开始的连续自然数，求数列和 + 1即为答案
# 0x02 数列不连续，出现“断层”

# 跳过数2n+12n+1,直接加入数2n+22n+2，显然现在能获得的数不再是连续的了，而是两段连续的数

# 一段从0开始，另一段从2n+22n+2开始，长度均为2n+12n+1,答案为2∗2n+12∗2n+1

# 我们继续加入新数，假设成为以下情况20,21,22,23,…,2n,2n+2,2n+3,2n+4,2n+5,…,22n20,21,22,23,…,2n,2n+2,2n+3,2n+4,2n+5,…,22n

# 前面的n+1n+1个数，能将一段连续的自然数覆盖，

# 后面n−1n−1个数，当我们把数轴上长度为2n+22n+2的区间合并成一个点，并将坐标值除2n+22n+2形成新数轴，在新数轴上也能覆盖连续的自然数区间

# 举个例子：

# 原数轴：0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,160,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16

# 合并区间长度为4

# 原数轴：[0,1,2,3],[4,5,6,7],[8,9,10,11],[12,13,14,15],[16[0,1,2,3],[4,5,6,7],[8,9,10,11],[12,13,14,15],[16

# 新数轴：0,1,2,3,40,1,2,3,4 分别对应原坐标：0,4,8,12,160,4,8,12,16

# 例子结束，承接上文

# 对于新数轴，我们发现其中每一个点都对应原数轴一段以该点为起始的区间，

# 对于原数轴，我们每段长为2n+22n+2的区间，能覆盖到的数只有2n+12n+1个（比如0∼2n+2−10∼2n+2−1这个区间和2n+2∼2n+3−12n+2∼2n+3−1这个区间，都只覆盖了区间的前2n+12n+1个数）

# 于是我们只要求得在新数轴上我们覆盖了多少个数，乘以之前求得的每段区间的数，就是答案，

# 显然又可以有新新数轴，总之可以递推下去，求得总答案