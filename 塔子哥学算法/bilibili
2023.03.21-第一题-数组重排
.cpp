
// 2023.03.21-第一题-数组重排
// 题目内容

// 有两个好朋友Alice和Bob，他们最近刚刚买了一套新房子。为了装修这个房子，他们购买了很多家具和家居用品。然而，他们的品味不太一样，Alice更喜欢现代感强一些的装饰，而Bob则更喜欢传统的装饰风格。于是，他们决定将这个房子装修成一个融合了现代与传统风格的房子。

// 在购买家具的时候，他们有一个共同的问题，就是如何选择合适的物品来满足他们的需求。Alice会给每个家具打一个现代风格得分，而Bob会给每个家具打一个传统风格得分。然后，他们需要从这个列表中选择一些家具，来装饰他们的新家。他们想要选择的家具应该既能满足Alice的要求，又能满足Bob的要求，因此他们需要在两个得分中都排名靠前的物品中做出选择。

// 在选择家具的过程中，他们发现在同一家具上，两人的得分可能会存在一些差异。于是，他们需要重新安排自己所选择的家具的顺序，来最大限度地满足双方的需求。他们想要使得他们所选择的家具的顺序，能够在两个得分中都尽可能接近排名靠前的物品。

// Alice和Bob给定两个长度为nn的数组aa和bb，现在他们需要你帮忙对a数组进行重排，使得∑i=1n∣ai−bi∣∑i=1n​∣ai​−bi​∣ 尽可能小，这样才能使得他们的房子更能符合两个人的心意，请你输出一个最优解。
// 输入描述

// 第一行输入一个正整数nn

// 第二行输入nn个正整数aiai​

// 第三行输入nn个正整数bibi​

// 1 ≤n≤≤n≤ 105105

// 1 ≤ai,bi≤109≤ai​,bi​≤109
// 输出描述

// nn个正整数，代表重排后的aa数组。如果有多个重排方式，输出任意即可
// 样例11

// 输入

// 5
// 1 2 3 4 5
// 5 4 3 2 1

// 输出

// 5 4 3 2 1


#include <bits/stdc++.h>
using namespace std;

int main() {
    int n;
    cin >> n;
    vector<int> arr(n), brr(n), idx(n);
    for (int i = 0; i < n; i++) cin >> arr[i];
    for (int i = 0; i < n; i++) cin >> brr[i];
    for (int i = 0; i < n; i++) idx[i] = i;
    sort(arr.begin(), arr.end());
    sort(idx.begin(), idx.end(), [&](int i, int j){
        return brr[i] < brr[j];
    });
    for (int i = 0; i < n; i++) {
        brr[idx[i]] = arr[i];
    }
    for (int i = 0; i < n; i++) {
        cout << brr[i];
        if (i < n-1) cout << " ";
        else cout << "\n";
    }
    return 0;

}