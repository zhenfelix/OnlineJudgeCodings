# 题目内容

# 塔子哥是一个喜欢收集数字的小朋友，他有一个特殊的相册，里面贴着各种各样的数字，有大有小，有长有短。他每天都会从报纸、杂志、广告牌等地方剪下数字来贴在相册里，他觉得数字很有趣，很美丽。有一天，他的妈妈告诉他，他的相册已经满了，不能再贴新的数字了。塔子哥很难过，他不想放弃任何一个数字，他觉得每个数字都是他的朋友。但是他也知道妈妈说的是对的，他不能再乱贴数字了，否则相册会破掉。

# 于是，他想到了一个办法，他决定把相册里重复出现的数字删除一些，这样就可以腾出空间来贴新的数字了。但是他又不想删除太多，因为他觉得重复的数字也有它们的魅力。所以他规定了一个原则：字符串中的每个数字最多只能出现 2 次，超过的需要进行删除，删除某个重复的数字后，其它数字相对位置保持不变。

# 这样做的好处是什么呢？塔子哥想到了一个理由：如果把相册里的所有数字连起来，就可以得到一个很大的数值。如果按照他的原则删除重复的数字，那么得到的数值就会更大。因为删除重复的数字相当于让后面的数字向前移动，这样就可以让更高位上的数字变大。塔子哥觉得这样做很有意思，也很有挑战性。

# 但是塔子哥发现这个任务并不容易，因为相册里有很多页，每一页都有很多数字。如果要手动删除重复的数字，并且找出最大的数值(可带前导0)，那么需要花费很多时间和精力。塔子哥希望能有一个更快捷方便的方法。

# 于是，他想到了你。你是塔子哥的好朋友，也是一个擅长编程和算法的高手。塔子哥知道你可以用计算机来帮助他解决这个问题。所以他把相册里所有页上的数字都拍成了照片，并且用字符串表示了每一页上的数值。然后他把这些字符串发给了你，并且请你帮忙得到经过删除操作后的最大的数值，以字符串表示。
# 输入描述

# 第一行为一个纯数字组成的字符串 strstr 。（ 1≤str.length()≤1000001≤str.length()≤100000 ）

#     可能携带前导0

# 输出描述

# 输出经过删除操作后的最大的数值。允许存在前导0
# 样例
# 样例1

# 输入

# 22232

# 输出

# 232

# 样例2

# 输入

# 331321131323300

# 输出

# 33211200


from collections import defaultdict
left = defaultdict(int)
use = defaultdict(int)
s = input()
for i in s:
    left[i] += 1
arr = []
for i in s:
    if use[i] > 1:
        left[i] -= 1
        continue
    while len(arr):
        f = arr[-1]
        if f < i and left[f]+use[f] > 2:
            arr.pop()
            use[f] -= 1
        else:
            break
    arr.append(i)
    use[i] += 1
    left[i] -= 1
print("".join(arr))