
# 2023.04.09-小红书春招-第三题-神奇的盒子
# 题目描述

# 塔子哥是一个爱好神秘的人，他有一个神奇的盒子，这个盒子有一个特殊的功能，里面的玩具会随着时间的流逝而改变自己表面上的数字。

# 盒子里面有很多编号为 11 到 nn 的玩具，每个玩具都被涂成了红色或蓝色。红玩具每过一秒表面上的数字就会增加 11，而蓝玩具每过一秒表面上的数字就会减少 11。

# 这个盒子的功能让塔子哥着迷不已，他会时不时地放入玩具或者取出玩具，并且想知道某些时刻盒子中玩具上写的数字之和。(注意:从盒子中拿出玩具之后，玩具的数字将会保留)
# 输入描述

# 第一行有一个正整数 nn ( 1≤n≤50001≤n≤5000 )，代表塔子哥有几个玩具。

# 第二行有 nn 个范围在 [−1000000,1000000][−1000000,1000000] 内的整数，第 ii 个代表编号为 11 到 nn 的玩具上写的数。

# 第三行是一个长度为 nn 的仅由R和B构成的字符串，第 ii 个 字母代表编号为 ii 的玩具是红色(R)或蓝色(B)

# 第四行有一个正整数 mm ( 1≤m≤1000001≤m≤100000 )，代表塔子哥进行了几次操作。

# 第五行有 mm 个递增的正整数，第 ii 个代表塔子哥进行的第 ii 次操作时间点。每个时间点塔子哥只会进行至多一次操作。时间点的范围在 [1,1000000000][1,1000000000] 内。

# 第六行有 mm 个整数，第 ii 个代表塔子哥进行的操作。 00 为询问当前时间点袋中玩具上的数字之和，正数 xx 代表放入了编号为x的玩具，负数 −x−x 代表取出了编号为 xx 的玩具。

# 最开始盒子是空的。 你可以认为玩具上的数字变化均发生在时间点之前，而每次操作均发生在时间点之后。输入保证操作合法。
# 输出描述

# 设塔子哥进行了 kk 次询问。你需要在一行中先输出 kk ，然后输出 kk 个数，第 ii 个代表第 ii 次询问的答案。题目保证塔子哥进行过至少一次询问。
# 样例

# 输入

# 3
# -5 4 6
# RBR
# 9
# 1 2 3 4 5 6 8 13 14 
# 1 3 0 2 -3 0 -1 0 -2

# 输出

# 3 4 2 -5

n = int(input())
score = list(map(int,input().split()))
color = input()
m = int(input())
clock = list(map(int,input().split()))
ops = list(map(int,input().split()))
ans = []
r,b,cur = 0,0,0
mp = dict()
for t,idx in zip(clock,ops):
    if idx == 0:
        ans.append(r*t-b*t+cur)
    elif idx < 0:
        idx = -idx
        idx -= 1
        cur -= score[idx]
        if color[idx] == 'R':
            r -= 1
            cur += mp[idx]
            score[idx] += t-mp[idx]
        else:
            b -= 1
            cur -= mp[idx]
            score[idx] -= (t-mp[idx])
    else:
        idx -= 1
        cur += score[idx]
        mp[idx] = t 
        if color[idx] == 'R':
            r += 1
            cur -= mp[idx]
        else:
            b += 1
            cur += mp[idx]
print(len(ans),*ans)
