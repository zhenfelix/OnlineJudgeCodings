
// 2023.04.28-od-第二题-日志首次上报最多积分

// map to 日志首次上报最多积分
// 题目内容

// 塔子哥是一个热爱游戏的少年，他最近迷上了一款叫做《动作大师》的游戏。这款游戏的玩法很简单，就是让玩家模仿屏幕上出现的各种动作，比如跳跃、拳击、踢腿等。每次玩家做一个动作，就会生成一条记录，记录上会显示玩家的动作名称、时间和得分。玩家可以把自己的记录提交到服务器上，和其他玩家比较排名。

// 塔子哥很想成为《动作大师》的冠军，所以他每天都在努力练习。但是他发现，提交记录并不是那么简单。服务器有一个特殊的规则，就是每发一条记录，塔子哥就能得1分，但是每条记录每晚发1秒，塔子哥就会扣1分，最多也只能提交100条记录。

// 这个规则的意思是，塔子哥不能随便提交记录，而要找到一个合适的时机。如果他提交得太早，他就会浪费掉一些记录；如果他提交得太晚，他就会损失掉一些分数；如果他积累了太多记录，他就会被迫提交。

// 有一天，塔子哥玩了一会儿游戏，生成了一些记录。按照服务器的规则塔子哥想要找到一个最优的策略，让自己第一次提交的时候能得到最多的分数。你能帮助他吗？
// 输入描述

// 输入为第一行为一个整数 nn ，表示塔子哥生成的 nn 个记录。

// 输入第二行为 nn 个整数，第 ii 个整数表示，塔子哥在第 ii 秒的时候产生了 TiTi​ 条记录。（ 1≤n≤1000,0≤Ti≤1001≤n≤1000,0≤Ti​≤100 ）
// 输出描述

// 输出为一个整数，表示首次提交最多能获得的分数。
// 样例
// 样例一

// 输入

// 3
// 33 68 2

// 输出

// 67

// 样例解释

// 如果第 11 个时刻提交，获得积分 3333 。如果第 22 个时刻提交，最多上报 100100 条，前 5050 条延迟提交 11 s，每条扣除 11 分，共获得积分为 100−33=67100−33=67 。
// 样例二

// 输入

// 3
// 1 77 1

// 输出

// 77

// 样例说明

// 第 22 个时刻提交，可获得最大积分 (77+1)−1=77(77+1)−1=77
// 样例三

// 输入

// 5
// 15 13 0 13 16

// 输出

// 15


#include <bits/stdc++.h>
using namespace std;
using ll = long long;
int main() {
    int cnt = 0, ans = 0, n;
    ll s = 0;
    cin >> n;
    for (int i = 0; i < n; i++) {
        int a;
        cin >> a;
        cnt += a;
        s += (ll)a*i;
        ans = max((ll)ans, min(100,cnt)-(ll)cnt*i+s);
    }
    cout << ans << endl;
    return 0;
}