
# 2023.03.30-第一题-塔子哥玩游戏
# 鸣谢

# 感谢群友March.H的投稿！！
# 题目内容

# 塔子哥是一名拥有独特天赋的冒险者，他拥有一双敏锐的眼睛，能够寻找到别人无法察觉的宝石和宝藏。为了寻找更多的宝藏和宝石，他踏上了一段新的旅程。

# 在这段旅程中，他来到了一个神秘的游戏世界。这个游戏世界有 nn 个关卡和 mm 种宝石。每一个关卡都有一个boss或商店。当他打败一个boss时，他可以获得一个新的宝石。但是，由于他只能携带一个宝石，他必须丢掉当前的宝石才能取走新的宝石。此外，当他到达一个商店时，商店会收购一种特定的宝石，并给他一些钱。

# 塔子哥想知道自己最多可以获得多少钱。因此，他开始了他的游戏之旅，希望能在这个游戏世界中获得尽可能多的财富。
# 输入描述

# 输入第一行为两个整数 nn 和 mm ，（ 1≤n,m≤1061≤n,m≤106 ）

# 接下来 nn 行，每一行第一个输入为一个字符，如果字符为 b，则代表boss，后面输入一个整数，代表宝石种类。

# 如果字符为 m ，则代表商店，后面输入两个整数，代表该商店收取的宝石种类和价格。
# 输出描述

# 输出塔子哥最多可以获得多少钱。
# 样例

# 输入

# 5 3
# b 3
# b 1
# m 3 50
# b 2
# m 1 100

# 输出

# 100


import sys 
from functools import *
from math import *


# sys.stdin = open("contests/input","r")
n, m = list(map(int,input().split()))
dp = [0]
mp = dict()
for _ in range(n):
    line = input().split()
    if line[0] == 'b':
        ch, k = line 
        mp[k] = len(dp)-1
    else:
        ch, k, p = line
        p = int(p)
        dp.append(dp[-1])
        if k in mp:
            dp[-1] = max(dp[-1], dp[mp[k]]+p)
print(dp[-1])